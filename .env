# Database configuration
DATABASE_URL=postgresql://admin:yourVeryStrongPassword@db:5432/v3db
DB_HOST=db
DB_PORT=5432
DB_NAME=v3db
DB_USER=admin
DB_PASSWORD=yourVeryStrongPassword

# MQTT configuration
MQTT_BROKER=mosquitto
MQTT_PORT=1883

# OAuth 2.0 / OIDC configuration
# Used by Flask backend (internal Docker network)
AUTH_SERVER_URL=http://auth-server:8080/realms/pmb
# Used in browser redirects (public URLs)
AUTH_SERVER_URL_PUBLIC=http://localhost:8888/realms/pmb
JWKS_URI=http://auth-server:8080/realms/pmb/protocol/openid-connect/certs
TOKEN_ENDPOINT=http://auth-server:8080/realms/pmb/protocol/openid-connect/token
AUTHORIZATION_ENDPOINT=http://localhost:8888/realms/pmb/protocol/openid-connect/auth
TOKEN_ISSUER=http://auth-server:8080/realms/pmb

# IMPORTANT: Set API_AUDIENCE to match the client ID - this is typically how Keycloak works
API_AUDIENCE=patient-monitor-web-app

# Web application configuration
APP_URL=http://localhost:8080
REDIRECT_URI=http://localhost:8080/callback

# Client credentials
WEB_APP_CLIENT_ID=patient-monitor-web-app
WEB_APP_CLIENT_SECRET=nYU5roKff6KutfL6CO6NcjHUBuwsi4o6
BACKEND_SERVICE_CLIENT_ID=patient-monitor-backend
BACKEND_SERVICE_CLIENT_SECRET=dXA2MECL1mBl8M3FRKYITHM9SCMIMfh
MQTT_SIMULATOR_CLIENT_ID=patient-monitor-simulator
MQTT_SIMULATOR_CLIENT_SECRET=gdykGlAOxiEOZ88d786MhCJ4TZvWDAjV

# Security configuration
JWKS_CACHE_TTL=3600
ACCESS_TOKEN_TTL=900
REFRESH_TOKEN_TTL=2592000

# HTTPS/TLS configuration
USE_HTTPS=False

# Flask configuration
FLASK_ENV=development
SECRET_KEY="your-secret-key-for-session-management"